//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /Fc /Od /Zi /T ps_5_0 /E PS_DefaultDraw /Fo outPS.cso intermediate.txt
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   struct N_DirectionalLight
//   {
//       
//       float3 mAmbientColor;          // Offset:    0
//       float mSpecularIntensity;      // Offset:   12
//       float3 mDiffuseColor;          // Offset:   16
//       float mDiffuseIntensity;       // Offset:   28
//       float3 mSpecularColor;         // Offset:   32
//       float mPad2;                   // Offset:   44
//       float3 mDirection;             // Offset:   48
//       float mPad3;                   // Offset:   60
//
//   } gDirectionalLight_Dynamic[10];   // Offset:    0 Size:   640
//   
//   struct N_PointLight
//   {
//       
//       float3 mAmbientColor;          // Offset:  640
//       float mSpecularIntensity;      // Offset:  652
//       float3 mDiffuseColor;          // Offset:  656
//       float mDiffuseIntensity;       // Offset:  668
//       float3 mSpecularColor;         // Offset:  672
//       float mAttenuationFactor;      // Offset:  684
//       float3 mPosition;              // Offset:  688
//       float mLightingRange;          // Offset:  700
//
//   } gPointLight_Dynamic[10];         // Offset:  640 Size:   640
//   
//   struct N_SpotLight
//   {
//       
//       float3 mAmbientColor;          // Offset: 1280
//       float mSpecularIntensity;      // Offset: 1292
//       float3 mDiffuseColor;          // Offset: 1296
//       float mDiffuseIntensity;       // Offset: 1308
//       float3 mSpecularColor;         // Offset: 1312
//       float mAttenuationFactor;      // Offset: 1324
//       float3 mLitAt;                 // Offset: 1328
//       float mLightingAngle;          // Offset: 1340
//       float3 mPosition;              // Offset: 1344
//       float mLightingRange;          // Offset: 1356
//
//   } gSpotLight_Dynamic[10];          // Offset: 1280 Size:   800
//   int gDirectionalLightCount_Dynamic;// Offset: 2080 Size:     4 [unused]
//   int gPointLightCount_Dynamic;      // Offset: 2084 Size:     4 [unused]
//   int gSpotLightCount_Dynamic;       // Offset: 2088 Size:     4 [unused]
//   int gIsLightingEnabled_Dynamic;    // Offset: 2092 Size:     4
//   float3 gCamPos;                    // Offset: 2096 Size:    12
//   float mPad1;                       // Offset: 2108 Size:     4 [unused]
//
// }
//
// cbuffer cbPerSubset
// {
//
//   struct N_Material_Basic
//   {
//       
//       float3 mAmbientColor;          // Offset:    0
//       int mSpecularSmoothLevel;      // Offset:   12
//       float3 mDiffuseColor;          // Offset:   16
//       float mNormalMapBumpIntensity; // Offset:   28
//       float3 mSpecularColor;         // Offset:   32
//       float mEnvironmentMapTransparency;// Offset:   44
//
//   } gMaterial;                       // Offset:    0 Size:    48
//   int gIsDiffuseMapValid;            // Offset:   48 Size:     4
//   int gIsNormalMapValid;             // Offset:   52 Size:     4
//   int gIsSpecularMapValid;           // Offset:   56 Size:     4
//   int gIsEnvironmentMapVaild;        // Offset:   60 Size:     4
//
// }
//
// cbuffer cbRarely
// {
//
//   struct N_DirectionalLight
//   {
//       
//       float3 mAmbientColor;          // Offset:    0
//       float mSpecularIntensity;      // Offset:   12
//       float3 mDiffuseColor;          // Offset:   16
//       float mDiffuseIntensity;       // Offset:   28
//       float3 mSpecularColor;         // Offset:   32
//       float mPad2;                   // Offset:   44
//       float3 mDirection;             // Offset:   48
//       float mPad3;                   // Offset:   60
//
//   } gDirectionalLight_Static[50];    // Offset:    0 Size:  3200
//   
//   struct N_PointLight
//   {
//       
//       float3 mAmbientColor;          // Offset: 3200
//       float mSpecularIntensity;      // Offset: 3212
//       float3 mDiffuseColor;          // Offset: 3216
//       float mDiffuseIntensity;       // Offset: 3228
//       float3 mSpecularColor;         // Offset: 3232
//       float mAttenuationFactor;      // Offset: 3244
//       float3 mPosition;              // Offset: 3248
//       float mLightingRange;          // Offset: 3260
//
//   } gPointLight_Static[50];          // Offset: 3200 Size:  3200
//   
//   struct N_SpotLight
//   {
//       
//       float3 mAmbientColor;          // Offset: 6400
//       float mSpecularIntensity;      // Offset: 6412
//       float3 mDiffuseColor;          // Offset: 6416
//       float mDiffuseIntensity;       // Offset: 6428
//       float3 mSpecularColor;         // Offset: 6432
//       float mAttenuationFactor;      // Offset: 6444
//       float3 mLitAt;                 // Offset: 6448
//       float mLightingAngle;          // Offset: 6460
//       float3 mPosition;              // Offset: 6464
//       float mLightingRange;          // Offset: 6476
//
//   } gSpotLight_Static[50];           // Offset: 6400 Size:  4000 [unused]
//   int gDirectionalLightCount_Static; // Offset: 10400 Size:     4 [unused]
//   int gPointLightCount_Static;       // Offset: 10404 Size:     4 [unused]
//   int gSpotLightCount_Static;        // Offset: 10408 Size:     4 [unused]
//   int gIsLightingEnabled_Static;     // Offset: 10412 Size:     4
//
// }
//
// cbuffer cbAtmosphere
// {
//
//   float3 gFogColor3;                 // Offset:    0 Size:    12
//   int gFogEnabled;                   // Offset:   12 Size:     4
//   float gFogNear;                    // Offset:   16 Size:     4
//   float gFogFar;                     // Offset:   20 Size:     4
//   int gIsSkyDomeValid;               // Offset:   24 Size:     4 [unused]
//   int gIsSkyBoxValid;                // Offset:   28 Size:     4 [unused]
//   float gSkyBoxWidth;                // Offset:   32 Size:     4 [unused]
//   float gSkyBoxHeight;               // Offset:   36 Size:     4 [unused]
//   float gSkyBoxDepth;                // Offset:   40 Size:     4 [unused]
//   float mPad3;                       // Offset:   44 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// samplerDefault                    sampler      NA          NA    0        1
// gDiffuseMap                       texture  float4          2d    0        1
// gNormalMap                        texture  float4          2d    1        1
// gCubeMap                          texture  float4        cube    2        1
// cbPerFrame                        cbuffer      NA          NA    0        1
// cbPerSubset                       cbuffer      NA          NA    1        1
// cbRarely                          cbuffer      NA          NA    2        1
// cbAtmosphere                      cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// COLOR                    0   xyzw        1     NONE  float   xyzw
// POSITION                 0   xyz         2     NONE  float   xyz 
// NORMAL                   0   xyz         3     NONE  float   xyz 
// TEXCOORD                 0   xy          4     NONE  float   xy  
// TANGENT                  0   xyz         5     NONE  float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[132], dynamicIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[651], dynamicIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 22

#line 42 "shader3D.fx"
mov r0.xyzw, l(0,0,0,0)  // finalColor4<0: 0f,1: 0f,2: 0f,3: 0f>

#line 46
ine r1.x, l(0, 0, 0, 0), cb0[130].w
not r1.y, r1.x
ine r1.z, l(0, 0, 0, 0), cb2[650].w
not r1.w, r1.z
and r1.y, r1.w, r1.y
if_nz r1.y
  mov o0.xyzw, v1.xyzw  // PS_DefaultDraw<0,1,2,3>
  ret 
endif 

#line 52
dp3 r1.y, v3.xyzx, v3.xyzx
rsq r1.y, r1.y
mul r2.xyz, r1.yyyy, v3.xyzx  // input<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>

#line 55
mov r3.xyz, -v2.xyzx
add r3.xyz, r3.xyzx, cb0[131].xyzx  // Vec_ToCam<0:Inf,1:Inf,2:Inf>
mov r4.xyz, r3.xyzx  // Vec_ToCam<0:Inf,1:Inf,2:Inf>

#line 60
dp3 r1.y, r4.xyzx, r4.xyzx
sqrt r1.y, r1.y  // Dist_CurrPointToCam<0:NaN:Inf>
ieq r1.w, cb3[0].w, l(1)
lt r2.w, cb3[1].y, r1.y
and r1.w, r1.w, r2.w

#line 71
mov r2.w, l(0)  // i<0: 0>
mov r5.xyzw, r0.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r4.w, r2.w  // i<0:[0,2]>
loop 
  ilt r6.x, r4.w, l(2)
  breakc_z r6.x
  nop 
  imul null, r6.x, r4.w, l(4)
  mov r6.yzw, cb0[r6.x + 0].xxyz  // Light<0,1,2>
  mov r7.xyz, cb0[r6.x + 1].xyzx  // Light<4,5,6>
  mov r8.xyz, cb0[r6.x + 2].xyzx  // Light<8,9,10>
  mov r9.xyz, cb0[r6.x + 3].xyzx  // Light<12,13,14>
  mov r7.w, cb0[r6.x + 0].w  // Light<3>
  mov r6.x, cb0[r6.x + 1].w  // Light<7>
  mov r10.xyz, r2.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r11.xyz, r4.xyzx  // Vec_toCam<0:Inf,1:Inf,2:Inf>
  mov r12.xyz, v5.xyzx  // tangentW<0,1,2>

#line 328 "3D_Function.fx"
  mov r9.xyz, r9.xyzx  // LightVec<0,1,2>
  dp3 r8.w, r9.xyzx, r9.xyzx
  rsq r8.w, r8.w
  mul r9.xyz, r8.wwww, r9.xyzx  // Unit_LightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 342
  nop 

#line 191
  ine r8.w, l(0, 0, 0, 0), cb1[3].x
  if_nz r8.w
    sample_indexable(texture2d)(float,float,float,float) r13.xyz, v4.xyxx, t0.xyzw, s0  // outDiffColor3<0:Inf,1:Inf,2:Inf>
  else 

#line 198
    mov r13.xyz, cb1[1].xyzx  // outDiffColor3<0,1,2>

#line 191
  endif 

#line 201
  ine r8.w, l(0, 0, 0, 0), cb1[3].y
  if_nz r8.w

#line 204
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, v4.xyxx, t1.xyzw, s0
    mov r14.xyz, r14.xyzx  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mul r14.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    add r14.xyz, r14.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mov r8.w, -cb1[1].w
    add r8.w, r8.w, l(1.000000)
    max r8.w, r8.w, l(0.000000)
    min r8.w, r8.w, l(1.000000)
    mov r15.xyz, -r14.xyzx
    add r15.xyz, r15.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
    mul r15.xyz, r8.wwww, r15.xyzx
    add r14.xyz, r14.xyzx, r15.xyzx
    dp3 r8.w, r14.xyzx, r14.xyzx
    rsq r8.w, r8.w
    mul r14.xyz, r8.wwww, r14.xyzx  // outNormalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 201
  else 

#line 212
    mov r14.xyz, l(0,1.000000,0,0)  // outNormalTBN<0: 0f,1: 1f,2: 0f>

#line 201
  endif 

#line 215
  ine r8.w, l(0, 0, 0, 0), cb1[3].z
  if_nz r8.w
    sample_indexable(texture2d)(float,float,float,float) r15.xyz, v4.xyxx, t0.xyzw, s0  // outSpecColor3<0:Inf,1:Inf,2:Inf>
  else 

#line 222
    mov r15.xyz, cb1[2].xyzx  // outSpecColor3<0,1,2>

#line 215
  endif 

#line 342
  mov r13.xyz, r13.xyzx  // diffuseColor3<0:Inf,1:Inf,2:Inf>
  mov r16.xyz, r14.xyzx  // normalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r15.xyz, r15.xyzx  // specularColor3<0:Inf,1:Inf,2:Inf>
  nop 
  mov r12.xyz, r12.xyzx  // TangentW<0,1,2>
  mov r10.xyz, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 295
  dp3 r8.w, r10.xyzx, r10.xyzx
  rsq r8.w, r8.w
  mul r17.xyz, r8.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r18.xyz, r17.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r10.w, r18.yzxy, r12.xyzx
  mul r19.xyz, r18.yzxy, r10.wwww
  mov r19.xyz, -r19.xyzx
  add r19.xyz, r12.xyzx, r19.xyzx
  dp3 r10.w, r19.xyzx, r19.xyzx
  rsq r10.w, r10.w
  mul r19.xyz, r10.wwww, r19.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r20.xyz, r19.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r21.xyz, r18.zxyz, r20.yzxy
  mul r18.xyz, r18.xyzx, r20.xyzx
  mov r18.xyz, -r18.xyzx
  add r18.xyz, r18.xyzx, r21.xyzx
  dp3 r10.w, r18.xyzx, r18.xyzx
  rsq r10.w, r10.w
  mul r18.xyz, r10.wwww, r18.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 306
  mov r19.w, l(0)  // transformMatrix<3: 0f>
  mov r17.w, l(0)  // transformMatrix<7: 0f>
  mov r18.w, l(0)  // transformMatrix<11: 0f>

#line 312
  mov r14.w, l(1.000000)
  dp4 r19.x, r19.xyzw, r14.xyzw  // outVectorXYZ<0:NaN:Inf>
  dp4 r19.y, r17.xyzw, r14.xyzw  // outVectorXYZ<1:NaN:Inf>
  dp4 r19.z, r18.xyzw, r14.xyzw  // outVectorXYZ<2:NaN:Inf>

#line 343
  mov r19.xyz, r19.xyzx  // deviatedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  nop 
  mov r11.xyz, r11.xyzx  // VecToCamW<0:Inf,1:Inf,2:Inf>
  mov r19.xyz, r19.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 232
  ine r10.w, l(0, 0, 0, 0), cb1[3].w

#line 235
  mov r11.xyz, -r11.xyzx
  dp3 r11.w, r11.xyzx, r19.xyzx
  add r11.w, r11.w, r11.w
  mov r11.w, -r11.w
  mul r14.xyz, r11.wwww, r19.xyzx
  add r11.xyz, r11.xyzx, r14.xyzx
  sample_indexable(texturecube)(float,float,float,float) r11.xyz, r11.xyzx, t2.xyzw, s0  // outEnvMapColor4<0:Inf,1:Inf,2:Inf>
  max r12.w, cb1[2].w, l(0.000000)
  min r11.w, r12.w, l(1.000000)  // outEnvMapColor4<3:[0f,1f]>

#line 232
  movc r11.xyzw, r10.wwww, r11.xyzw, l(0,0,0,0)  // outEnvMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>

#line 344
  mov r11.xyzw, r11.xyzw  // envMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>
  nop 

#line 260
  mul r14.xyz, r8.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r17.xyz, r14.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r10.w, r17.yzxy, r12.xyzx
  mul r18.xyz, r17.yzxy, r10.wwww
  mov r18.xyz, -r18.xyzx
  add r18.xyz, r12.xyzx, r18.xyzx
  dp3 r10.w, r18.xyzx, r18.xyzx
  rsq r10.w, r10.w
  mul r18.xyz, r10.wwww, r18.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r19.xyz, r18.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r20.xyz, r17.zxyz, r19.yzxy
  mul r17.xyz, r17.xyzx, r19.xyzx
  mov r17.xyz, -r17.xyzx
  add r17.xyz, r17.xyzx, r20.xyzx
  dp3 r10.w, r17.xyzx, r17.xyzx
  rsq r10.w, r10.w
  mul r17.xyz, r10.wwww, r17.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
  mov r3.w, l(1.000000)
  mov r18.w, l(0)
  dp4 r18.x, r3.xyzw, r18.xyzw  // outVectorTBN<0:NaN:Inf>
  mov r14.w, l(0)
  dp4 r18.y, r3.xyzw, r14.xyzw  // outVectorTBN<1:NaN:Inf>
  mov r17.w, l(0)
  dp4 r18.z, r3.xyzw, r17.xyzw  // outVectorTBN<2:NaN:Inf>

#line 345
  mov r18.xyz, r18.xyzx  // Vec_toCamTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  nop 

#line 260
  mul r10.xyz, r8.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r14.xyz, r10.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r3.w, r14.yzxy, r12.xyzx
  mul r17.xyz, r14.yzxy, r3.wwww
  mov r17.xyz, -r17.xyzx
  add r12.xyz, r12.xyzx, r17.xyzx
  dp3 r3.w, r12.xyzx, r12.xyzx
  rsq r3.w, r3.w
  mul r12.xyz, r3.wwww, r12.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r17.xyz, r12.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r19.xyz, r14.zxyz, r17.yzxy
  mul r14.xyz, r14.xyzx, r17.xyzx
  mov r14.xyz, -r14.xyzx
  add r14.xyz, r14.xyzx, r19.xyzx
  dp3 r3.w, r14.xyzx, r14.xyzx
  rsq r3.w, r3.w
  mul r14.xyz, r3.wwww, r14.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
  mov r9.w, l(1.000000)
  mov r12.w, l(0)
  dp4 r12.x, r9.xyzw, r12.xyzw  // outVectorTBN<0:NaN:Inf>
  mov r10.w, l(0)
  dp4 r12.y, r9.xyzw, r10.xyzw  // outVectorTBN<1:NaN:Inf>
  mov r14.w, l(0)
  dp4 r12.z, r9.xyzw, r14.xyzw  // outVectorTBN<2:NaN:Inf>

#line 346
  mov r12.xyz, r12.xyzx  // lightVecTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r9.xyz, -r12.xyzx
  dp3 r3.w, r9.xyzx, r16.xyzx
  mul r3.w, r3.w, r6.x  // diffuseCosFactor<0:NaN:Inf>

#line 354
  nop 
  mov r3.w, r3.w  // diffuseCosFactor<0:NaN:Inf>
  mov r7.w, r7.w  // lightSpecIntensity<0>
  itof r6.x, cb1[0].w  // matSpecSmoothLevel<0:[-2.14748e+009f,2.14748e+009f]>
  mov r9.xyz, cb1[0].xyzx  // matAmbientColor3<0,1,2>
  mov r6.yzw, r6.yyzw  // lightAmbientColor3<0,1,2>
  mov r13.xyz, r13.xyzx  // matDiffuseColor3<0:Inf,1:Inf,2:Inf>
  mov r7.xyz, r7.xyzx  // lightDiffuseColor3<0,1,2>
  mov r15.xyz, r15.xyzx  // matSpecColor3<0:Inf,1:Inf,2:Inf>
  mov r8.xyz, r8.xyzx  // lightSpecColor3<0,1,2>
  mov r18.xyz, r18.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r12.xyz, r12.xyzx  // UnitLightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r16.xyz, r16.xyzx  // Normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 156
  mul r6.yzw, r6.yyzw, r9.xxyz
  mul r6.yzw, r13.xxyz, r6.yyzw  // outAmbient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 161
  lt r8.w, l(0.000000), r3.w

#line 164
  mul r3.w, r3.w, l(1.000000)
  mul r7.xyz, r7.xyzx, r13.xyzx
  mul r7.xyz, r3.wwww, r7.xyzx  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 167
  dp3 r3.w, r16.xyzx, r16.xyzx
  rsq r3.w, r3.w
  mul r9.xyz, r3.wwww, r16.xyzx
  dp3 r3.w, r12.xyzx, r9.xyzx
  add r3.w, r3.w, r3.w
  mov r3.w, -r3.w
  mul r9.xyz, r3.wwww, r9.xyzx
  add r9.xyz, r12.xyzx, r9.xyzx  // tmpV<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 170
  dp3 r3.w, r18.xyzx, r18.xyzx
  rsq r3.w, r3.w
  mul r10.xyz, r3.wwww, r18.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 173
  dp3 r3.w, r9.xyzx, r10.xyzx
  max r3.w, r3.w, l(0.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, r6.x
  exp r3.w, r3.w
  mul r3.w, r3.w, r7.w  // SpecFactor<0:NaN:Inf>

#line 176
  mul r3.w, r3.w, l(1.000000)
  mul r9.xyz, r8.xyzx, r15.xyzx
  mov r9.w, l(1.000000)
  mul r9.xyzw, r3.wwww, r9.xyzw  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 161
  movc r9.xyzw, r8.wwww, r9.xyzw, l(0,0,0,1.000000)  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
  movc r7.xyz, r8.wwww, r7.xyzx, l(0,0,0,0)  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 354
  mov r6.yzw, r6.yyzw  // outAmbient4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r7.xyz, r7.xyzx  // outDiffuse4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r9.xyzw, r9.xyzw  // outSpec4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 362
  add r6.xyz, r6.yzwy, r7.xyzx
  mov r7.xyz, -r6.xyzx
  add r7.xyz, r7.xyzx, r11.xyzx
  mul r7.xyz, r7.xyzx, r11.wwww
  add r6.xyz, r6.xyzx, r7.xyzx
  mov r6.w, l(1.000000)
  add r6.xyzw, r9.xyzw, r6.xyzw  // outColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 73 "shader3D.fx"
  mov r6.xyzw, r6.xyzw  // tmpColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
  add r5.xyzw, r5.xyzw, r6.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 71
  iadd r4.w, r4.w, l(1)  // i<0:[1,3]>
endloop 

#line 76
mov r0.xyzw, r5.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r3.x, r2.w  // i<0:[0,2]>
loop 
  ilt r3.y, r3.x, l(2)
  breakc_z r3.y
  nop 
  imul null, r3.y, r3.x, l(4)
  mov r6.xyz, cb0[r3.y + 40].xyzx  // Light<0,1,2>
  mov r7.xyz, cb0[r3.y + 41].xyzx  // Light<4,5,6>
  mov r8.xyz, cb0[r3.y + 42].xyzx  // Light<8,9,10>
  mov r9.xyz, cb0[r3.y + 43].xyzx  // Light<12,13,14>
  mov r3.z, cb0[r3.y + 40].w  // Light<3>
  mov r3.w, cb0[r3.y + 41].w  // Light<7>
  mov r4.w, cb0[r3.y + 42].w  // Light<11>
  mov r3.y, cb0[r3.y + 43].w  // Light<15>
  mov r10.xyz, r2.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r11.xyz, r4.xyzx  // Vec_toCam<0:Inf,1:Inf,2:Inf>
  mov r12.xyz, v2.xyzx  // thisPoint<0,1,2>
  mov r13.xyz, v5.xyzx  // tangentW<0,1,2>

#line 379 "3D_Function.fx"
  mov r9.xyz, -r9.xyzx
  add r9.xyz, r9.xyzx, r12.xyzx  // LightVec<0:Inf,1:Inf,2:Inf>
  dp3 r6.w, r9.xyzx, r9.xyzx
  rsq r7.w, r6.w
  mul r9.xyz, r7.wwww, r9.xyzx  // Unit_LightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r12.xyz, r9.xyzx  // Unit_LightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 383
  sqrt r6.w, r6.w  // disFromLight<0:NaN:Inf>
  mul r4.w, r4.w, r6.w
  mul r4.w, r6.w, r4.w
  add r4.w, r4.w, l(1.000000)
  div r4.w, l(1.000000), r4.w  // Attenuation<0:NaN:Inf>

#line 388
  lt r3.y, r3.y, r6.w

#line 201
  ine r6.w, l(0, 0, 0, 0), cb1[3].y
  if_nz r6.w

#line 204
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, v4.xyxx, t1.xyzw, s0
    mov r14.xyz, r14.xyzx  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mul r14.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    add r14.xyz, r14.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mov r6.w, -cb1[1].w
    add r6.w, r6.w, l(1.000000)
    max r6.w, r6.w, l(0.000000)
    min r6.w, r6.w, l(1.000000)
    mov r15.xyz, -r14.xyzx
    add r15.xyz, r15.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
    mul r15.xyz, r6.wwww, r15.xyzx
    add r14.xyz, r14.xyzx, r15.xyzx
    dp3 r6.w, r14.xyzx, r14.xyzx
    rsq r6.w, r6.w
    mul r14.xyz, r6.wwww, r14.xyzx  // outNormalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 201
  else 

#line 212
    mov r14.xyz, l(0,1.000000,0,0)  // outNormalTBN<0: 0f,1: 1f,2: 0f>

#line 201
  endif 

#line 405
  mov r13.xyz, r13.xyzx  // TangentW<0,1,2>
  mov r10.xyz, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 295
  dp3 r6.w, r10.xyzx, r10.xyzx
  rsq r6.w, r6.w
  mul r15.xyz, r6.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r16.xyz, r15.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r7.w, r16.yzxy, r13.xyzx
  mul r17.xyz, r16.yzxy, r7.wwww
  mov r17.xyz, -r17.xyzx
  add r17.xyz, r13.xyzx, r17.xyzx
  dp3 r7.w, r17.xyzx, r17.xyzx
  rsq r7.w, r7.w
  mul r17.xyz, r7.wwww, r17.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r18.xyz, r17.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r19.xyz, r16.zxyz, r18.yzxy
  mul r16.xyz, r16.xyzx, r18.xyzx
  mov r16.xyz, -r16.xyzx
  add r16.xyz, r16.xyzx, r19.xyzx
  dp3 r7.w, r16.xyzx, r16.xyzx
  rsq r7.w, r7.w
  mul r16.xyz, r7.wwww, r16.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 306
  mov r17.w, l(0)  // transformMatrix<3: 0f>
  mov r15.w, l(0)  // transformMatrix<7: 0f>
  mov r16.w, l(0)  // transformMatrix<11: 0f>

#line 312
  mov r14.w, l(1.000000)
  dp4 r17.x, r17.xyzw, r14.xyzw  // outVectorXYZ<0:NaN:Inf>
  dp4 r17.y, r15.xyzw, r14.xyzw  // outVectorXYZ<1:NaN:Inf>
  dp4 r17.z, r16.xyzw, r14.xyzw  // outVectorXYZ<2:NaN:Inf>

#line 405
  mov r17.xyz, r17.xyzx  // deviatedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r11.xyz, r11.xyzx  // VecToCamW<0:Inf,1:Inf,2:Inf>
  mov r17.xyz, r17.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 235
  mov r11.xyz, -r11.xyzx
  dp3 r7.w, r11.xyzx, r17.xyzx
  add r7.w, r7.w, r7.w
  mov r7.w, -r7.w
  mul r15.xyz, r7.wwww, r17.xyzx
  add r11.xyz, r11.xyzx, r15.xyzx
  sample_indexable(texturecube)(float,float,float,float) r11.xyz, r11.xyzx, t2.xyzw, s0  // outEnvMapColor4<0:Inf,1:Inf,2:Inf>

#line 396
  if_z r3.y

#line 404
    nop 

#line 191
    ine r3.y, l(0, 0, 0, 0), cb1[3].x
    if_nz r3.y
      sample_indexable(texture2d)(float,float,float,float) r15.xyz, v4.xyxx, t0.xyzw, s0  // outDiffColor3<0:Inf,1:Inf,2:Inf>
    else 

#line 198
      mov r15.xyz, cb1[1].xyzx  // outDiffColor3<0,1,2>

#line 191
    endif 

#line 215
    ine r3.y, l(0, 0, 0, 0), cb1[3].z
    if_nz r3.y
      sample_indexable(texture2d)(float,float,float,float) r16.xyz, v4.xyxx, t0.xyzw, s0  // outSpecColor3<0:Inf,1:Inf,2:Inf>
    else 

#line 222
      mov r16.xyz, cb1[2].xyzx  // outSpecColor3<0,1,2>

#line 215
    endif 

#line 404
    mov r15.xyz, r15.xyzx  // diffuseColor3<0:Inf,1:Inf,2:Inf>
    mov r14.xyz, r14.xyzx  // normalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r16.xyz, r16.xyzx  // specularColor3<0:Inf,1:Inf,2:Inf>
    nop 
    nop 

#line 232
    ine r3.y, l(0, 0, 0, 0), cb1[3].w

#line 235
    max r7.w, cb1[2].w, l(0.000000)
    min r11.w, r7.w, l(1.000000)  // outEnvMapColor4<3:[0f,1f]>

#line 232
    movc r11.xyzw, r3.yyyy, r11.xyzw, l(0,0,0,0)  // outEnvMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>

#line 406
    mov r11.xyzw, r11.xyzw  // envMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>
    nop 

#line 260
    mul r17.xyz, r6.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r18.xyz, r17.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
    dp3 r3.y, r18.yzxy, r13.xyzx
    mul r19.xyz, r18.yzxy, r3.yyyy
    mov r19.xyz, -r19.xyzx
    add r19.xyz, r13.xyzx, r19.xyzx
    dp3 r3.y, r19.xyzx, r19.xyzx
    rsq r3.y, r3.y
    mul r19.xyz, r3.yyyy, r19.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r20.xyz, r19.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
    mul r21.xyz, r18.zxyz, r20.yzxy
    mul r18.xyz, r18.xyzx, r20.xyzx
    mov r18.xyz, -r18.xyzx
    add r18.xyz, r18.xyzx, r21.xyzx
    dp3 r3.y, r18.xyzx, r18.xyzx
    rsq r3.y, r3.y
    mul r18.xyz, r3.yyyy, r18.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
    mov r20.xyz, r4.xyzx
    mov r20.w, l(1.000000)
    mov r19.w, l(0)
    dp4 r19.x, r20.xyzw, r19.xyzw  // outVectorTBN<0:NaN:Inf>
    mov r17.w, l(0)
    dp4 r19.y, r20.xyzw, r17.xyzw  // outVectorTBN<1:NaN:Inf>
    mov r18.w, l(0)
    dp4 r19.z, r20.xyzw, r18.xyzw  // outVectorTBN<2:NaN:Inf>

#line 407
    mov r19.xyz, r19.xyzx  // Vec_toCamTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 260
    mul r17.xyz, r6.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r18.xyz, r17.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
    dp3 r3.y, r18.yzxy, r13.xyzx
    mul r20.xyz, r18.yzxy, r3.yyyy
    mov r20.xyz, -r20.xyzx
    add r13.xyz, r13.xyzx, r20.xyzx
    dp3 r3.y, r13.xyzx, r13.xyzx
    rsq r3.y, r3.y
    mul r13.xyz, r3.yyyy, r13.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r20.xyz, r13.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
    mul r21.xyz, r18.zxyz, r20.yzxy
    mul r18.xyz, r18.xyzx, r20.xyzx
    mov r18.xyz, -r18.xyzx
    add r18.xyz, r18.xyzx, r21.xyzx
    dp3 r3.y, r18.xyzx, r18.xyzx
    rsq r3.y, r3.y
    mul r18.xyz, r3.yyyy, r18.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
    mov r9.w, l(1.000000)
    mov r13.w, l(0)
    dp4 r13.x, r9.xyzw, r13.xyzw  // outVectorTBN<0:NaN:Inf>
    mov r17.w, l(0)
    dp4 r13.y, r9.xyzw, r17.xyzw  // outVectorTBN<1:NaN:Inf>
    mov r18.w, l(0)
    dp4 r13.z, r9.xyzw, r18.xyzw  // outVectorTBN<2:NaN:Inf>

#line 408
    mov r13.xyz, r13.xyzx  // lightVecTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 411
    mov r9.xyz, -r12.xyzx
    dp3 r3.y, r9.xyzx, r10.xyzx
    mul r3.y, r3.y, r3.w  // diffuseCosFactor<0:NaN:Inf>

#line 417
    nop 
    mov r3.y, r3.y  // diffuseCosFactor<0:NaN:Inf>
    mov r3.z, r3.z  // lightSpecIntensity<0>
    itof r3.w, cb1[0].w  // matSpecSmoothLevel<0:[-2.14748e+009f,2.14748e+009f]>
    mov r4.w, r4.w  // Attenuation<0:NaN:Inf>
    mov r9.xyz, cb1[0].xyzx  // matAmbientColor3<0,1,2>
    mov r6.xyz, r6.xyzx  // lightAmbientColor3<0,1,2>
    mov r15.xyz, r15.xyzx  // matDiffuseColor3<0:Inf,1:Inf,2:Inf>
    mov r7.xyz, r7.xyzx  // lightDiffuseColor3<0,1,2>
    mov r16.xyz, r16.xyzx  // matSpecColor3<0:Inf,1:Inf,2:Inf>
    mov r8.xyz, r8.xyzx  // lightSpecColor3<0,1,2>
    mov r19.xyz, r19.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r13.xyz, r13.xyzx  // UnitLightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r14.xyz, r14.xyzx  // Normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 156
    mul r6.xyz, r6.xyzx, r9.xyzx
    mul r6.xyz, r15.xyzx, r6.xyzx  // outAmbient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 161
    lt r6.w, l(0.000000), r3.y

#line 164
    mul r3.y, r3.y, r4.w
    mul r7.xyz, r7.xyzx, r15.xyzx
    mul r7.xyz, r3.yyyy, r7.xyzx  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 167
    dp3 r3.y, r14.xyzx, r14.xyzx
    rsq r3.y, r3.y
    mul r9.xyz, r3.yyyy, r14.xyzx
    dp3 r3.y, r13.xyzx, r9.xyzx
    add r3.y, r3.y, r3.y
    mov r3.y, -r3.y
    mul r9.xyz, r3.yyyy, r9.xyzx
    add r9.xyz, r13.xyzx, r9.xyzx  // tmpV<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 170
    dp3 r3.y, r19.xyzx, r19.xyzx
    rsq r3.y, r3.y
    mul r10.xyz, r3.yyyy, r19.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 173
    dp3 r3.y, r9.xyzx, r10.xyzx
    max r3.y, r3.y, l(0.000000)
    log r3.y, r3.y
    mul r3.y, r3.y, r3.w
    exp r3.y, r3.y
    mul r3.y, r3.y, r3.z  // SpecFactor<0:NaN:Inf>

#line 176
    mul r3.y, r3.y, r4.w
    mul r8.xyz, r8.xyzx, r16.xyzx
    mov r8.w, l(1.000000)
    mul r8.xyzw, r3.yyyy, r8.xyzw  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 161
    movc r8.xyzw, r6.wwww, r8.xyzw, l(0,0,0,1.000000)  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
    movc r3.yzw, r6.wwww, r7.xxyz, l(0,0,0,0)  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 417
    mov r6.xyz, r6.xyzx  // outAmbient4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r3.yzw, r3.yyzw  // outDiffuse4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r8.xyzw, r8.xyzw  // outSpec4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 425
    add r3.yzw, r3.yyzw, r6.xxyz
    mov r6.xyz, -r3.yzwy
    add r6.xyz, r6.xyzx, r11.xyzx
    mul r6.xyz, r6.xyzx, r11.wwww
    add r6.xyz, r3.yzwy, r6.xyzx
    mov r6.w, l(1.000000)
    add r6.xyzw, r8.xyzw, r6.xyzw  // outColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 396
  else 
    mov r6.xyzw, l(0,0,0,1.000000)  // outColor4<0: 0f,1: 0f,2: 0f,3: 1f>
  endif 

#line 78 "shader3D.fx"
  mov r6.xyzw, r6.xyzw  // tmpColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
  add r0.xyzw, r0.xyzw, r6.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 76
  iadd r3.x, r3.x, l(1)  // i<0:[1,3]>
endloop 

#line 81
mov r3.xyzw, r0.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r4.w, r2.w  // i<0:[0,2]>
loop 
  ilt r5.x, r4.w, l(2)
  breakc_z r5.x

#line 84
  nop 
  imul null, r5.x, r4.w, l(5)
  mov r5.yzw, cb0[r5.x + 80].xxyz  // Light<0,1,2>
  mov r6.xyz, cb0[r5.x + 81].xyzx  // Light<4,5,6>
  mov r7.xyz, cb0[r5.x + 82].xyzx  // Light<8,9,10>
  mov r8.xyz, cb0[r5.x + 83].xyzx  // Light<12,13,14>
  mov r9.xyz, cb0[r5.x + 84].xyzx  // Light<16,17,18>
  mov r6.w, cb0[r5.x + 80].w  // Light<3>
  mov r7.w, cb0[r5.x + 81].w  // Light<7>
  mov r8.w, cb0[r5.x + 82].w  // Light<11>
  mov r9.w, cb0[r5.x + 83].w  // Light<15>
  mov r5.x, cb0[r5.x + 84].w  // Light<19>
  mov r10.xyz, r2.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r11.xyz, r4.xyzx  // Vec_toCam<0:Inf,1:Inf,2:Inf>
  mov r12.xyz, v2.xyzx  // thisPoint<0,1,2>
  mov r13.xyz, v5.xyzx  // tangentW<0,1,2>

#line 441 "3D_Function.fx"
  mov r9.xyz, -r9.xyzx
  add r12.xyz, r9.xyzx, r12.xyzx  // LightVec<0:Inf,1:Inf,2:Inf>
  dp3 r10.w, r12.xyzx, r12.xyzx
  rsq r11.w, r10.w
  mul r12.xyz, r11.wwww, r12.xyzx  // Unit_LightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 445
  sqrt r10.w, r10.w  // disFromLight<0:NaN:Inf>
  mul r8.w, r8.w, r10.w
  mul r8.w, r10.w, r8.w
  add r8.w, r8.w, l(1.000000)
  div r8.w, l(1.000000), r8.w  // Attenuation<0:NaN:Inf>

#line 450
  add r8.xyz, r8.xyzx, r9.xyzx
  dp3 r9.x, r8.xyzx, r8.xyzx
  rsq r9.x, r9.x
  mul r8.xyz, r8.xyzx, r9.xxxx
  dp3 r8.x, r12.xyzx, r8.xyzx  // Cos_Theta<0:NaN:Inf>

#line 453
  lt r5.x, r5.x, r10.w
  div r8.y, r9.w, l(2.000000)
  sincos null, r8.y, r8.y
  lt r8.x, r8.x, r8.y
  or r5.x, r5.x, r8.x

#line 201
  ine r8.x, l(0, 0, 0, 0), cb1[3].y
  if_nz r8.x

#line 204
    sample_indexable(texture2d)(float,float,float,float) r8.xyz, v4.xyxx, t1.xyzw, s0
    mov r8.xyz, r8.xyzx  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mul r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    add r8.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mov r9.x, -cb1[1].w
    add r9.x, r9.x, l(1.000000)
    max r9.x, r9.x, l(0.000000)
    min r9.x, r9.x, l(1.000000)
    mov r9.yzw, -r8.xxyz
    add r9.yzw, r9.yyzw, l(0.000000, 0.000000, 1.000000, 0.000000)
    mul r9.xyz, r9.yzwy, r9.xxxx
    add r8.xyz, r8.xyzx, r9.xyzx
    dp3 r9.x, r8.xyzx, r8.xyzx
    rsq r9.x, r9.x
    mul r9.xyz, r8.xyzx, r9.xxxx  // outNormalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 201
  else 

#line 212
    mov r9.xyz, l(0,1.000000,0,0)  // outNormalTBN<0: 0f,1: 1f,2: 0f>

#line 201
  endif 

#line 470
  mov r13.xyz, r13.xyzx  // TangentW<0,1,2>
  mov r10.xyz, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 295
  dp3 r8.x, r10.xyzx, r10.xyzx
  rsq r8.x, r8.x
  mul r14.xyz, r8.xxxx, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r15.xyz, r14.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r8.y, r15.yzxy, r13.xyzx
  mul r16.xyz, r15.yzxy, r8.yyyy
  mov r16.xyz, -r16.xyzx
  add r16.xyz, r13.xyzx, r16.xyzx
  dp3 r8.y, r16.xyzx, r16.xyzx
  rsq r8.y, r8.y
  mul r16.xyz, r8.yyyy, r16.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r17.xyz, r16.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r18.xyz, r15.zxyz, r17.yzxy
  mul r15.xyz, r15.xyzx, r17.xyzx
  mov r15.xyz, -r15.xyzx
  add r15.xyz, r15.xyzx, r18.xyzx
  dp3 r8.y, r15.xyzx, r15.xyzx
  rsq r8.y, r8.y
  mul r15.xyz, r8.yyyy, r15.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 306
  mov r16.w, l(0)  // transformMatrix<3: 0f>
  mov r14.w, l(0)  // transformMatrix<7: 0f>
  mov r15.w, l(0)  // transformMatrix<11: 0f>

#line 312
  mov r9.w, l(1.000000)
  dp4 r16.x, r16.xyzw, r9.xyzw  // outVectorXYZ<0:NaN:Inf>
  dp4 r16.y, r14.xyzw, r9.xyzw  // outVectorXYZ<1:NaN:Inf>
  dp4 r16.z, r15.xyzw, r9.xyzw  // outVectorXYZ<2:NaN:Inf>

#line 470
  mov r16.xyz, r16.xyzx  // deviatedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r11.xyz, r11.xyzx  // VecToCamW<0:Inf,1:Inf,2:Inf>
  mov r16.xyz, r16.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 235
  mov r11.xyz, -r11.xyzx
  dp3 r8.y, r11.xyzx, r16.xyzx
  add r8.y, r8.y, r8.y
  mov r8.y, -r8.y
  mul r14.xyz, r8.yyyy, r16.xyzx
  add r11.xyz, r11.xyzx, r14.xyzx
  sample_indexable(texturecube)(float,float,float,float) r11.xyz, r11.xyzx, t2.xyzw, s0  // outEnvMapColor4<0:Inf,1:Inf,2:Inf>

#line 461
  if_z r5.x

#line 469
    nop 

#line 191
    ine r5.x, l(0, 0, 0, 0), cb1[3].x
    if_nz r5.x
      sample_indexable(texture2d)(float,float,float,float) r14.xyz, v4.xyxx, t0.xyzw, s0  // outDiffColor3<0:Inf,1:Inf,2:Inf>
    else 

#line 198
      mov r14.xyz, cb1[1].xyzx  // outDiffColor3<0,1,2>

#line 191
    endif 

#line 215
    ine r5.x, l(0, 0, 0, 0), cb1[3].z
    if_nz r5.x
      sample_indexable(texture2d)(float,float,float,float) r15.xyz, v4.xyxx, t0.xyzw, s0  // outSpecColor3<0:Inf,1:Inf,2:Inf>
    else 

#line 222
      mov r15.xyz, cb1[2].xyzx  // outSpecColor3<0,1,2>

#line 215
    endif 

#line 469
    mov r14.xyz, r14.xyzx  // diffuseColor3<0:Inf,1:Inf,2:Inf>
    mov r9.xyz, r9.xyzx  // normalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r15.xyz, r15.xyzx  // specularColor3<0:Inf,1:Inf,2:Inf>
    nop 
    nop 

#line 232
    ine r5.x, l(0, 0, 0, 0), cb1[3].w

#line 235
    max r8.y, cb1[2].w, l(0.000000)
    min r11.w, r8.y, l(1.000000)  // outEnvMapColor4<3:[0f,1f]>

#line 232
    movc r11.xyzw, r5.xxxx, r11.xyzw, l(0,0,0,0)  // outEnvMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>

#line 471
    mov r11.xyzw, r11.xyzw  // envMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>
    nop 

#line 260
    mul r16.xyz, r8.xxxx, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r8.xyz, r16.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
    dp3 r5.x, r8.yzxy, r13.xyzx
    mul r17.xyz, r8.yzxy, r5.xxxx
    mov r17.xyz, -r17.xyzx
    add r13.xyz, r13.xyzx, r17.xyzx
    dp3 r5.x, r13.xyzx, r13.xyzx
    rsq r5.x, r5.x
    mul r13.xyz, r5.xxxx, r13.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r17.xyz, r13.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
    mul r18.xyz, r8.zxyz, r17.yzxy
    mul r8.xyz, r8.xyzx, r17.xyzx
    mov r8.xyz, -r8.xyzx
    add r8.xyz, r8.xyzx, r18.xyzx
    dp3 r5.x, r8.xyzx, r8.xyzx
    rsq r5.x, r5.x
    mul r17.xyz, r5.xxxx, r8.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
    mov r18.xyz, r4.xyzx
    mov r18.w, l(1.000000)
    mov r13.w, l(0)
    dp4 r8.x, r18.xyzw, r13.xyzw  // outVectorTBN<0:NaN:Inf>
    mov r16.w, l(0)
    dp4 r8.y, r18.xyzw, r16.xyzw  // outVectorTBN<1:NaN:Inf>
    mov r17.w, l(0)
    dp4 r8.z, r18.xyzw, r17.xyzw  // outVectorTBN<2:NaN:Inf>

#line 472
    mov r8.xyz, r8.xyzx  // Vec_toCamTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 476
    mov r13.xyz, -r12.xyzx
    dp3 r5.x, r13.xyzx, r10.xyzx
    mul r5.x, r5.x, r7.w  // diffuseCosFactor<0:NaN:Inf>

#line 479
    nop 
    mov r5.x, r5.x  // diffuseCosFactor<0:NaN:Inf>
    mov r6.w, r6.w  // lightSpecIntensity<0>
    itof r7.w, cb1[0].w  // matSpecSmoothLevel<0:[-2.14748e+009f,2.14748e+009f]>
    mov r8.w, r8.w  // Attenuation<0:NaN:Inf>
    mov r10.xyz, cb1[0].xyzx  // matAmbientColor3<0,1,2>
    mov r5.yzw, r5.yyzw  // lightAmbientColor3<0,1,2>
    mov r14.xyz, r14.xyzx  // matDiffuseColor3<0:Inf,1:Inf,2:Inf>
    mov r6.xyz, r6.xyzx  // lightDiffuseColor3<0,1,2>
    mov r15.xyz, r15.xyzx  // matSpecColor3<0:Inf,1:Inf,2:Inf>
    mov r7.xyz, r7.xyzx  // lightSpecColor3<0,1,2>
    mov r8.xyz, r8.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r12.xyz, r12.xyzx  // UnitLightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r9.xyz, r9.xyzx  // Normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 156
    mul r5.yzw, r5.yyzw, r10.xxyz
    mul r5.yzw, r14.xxyz, r5.yyzw  // outAmbient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 161
    lt r9.w, l(0.000000), r5.x

#line 164
    mul r5.x, r5.x, r8.w
    mul r6.xyz, r6.xyzx, r14.xyzx
    mul r6.xyz, r5.xxxx, r6.xyzx  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 167
    dp3 r5.x, r9.xyzx, r9.xyzx
    rsq r5.x, r5.x
    mul r9.xyz, r5.xxxx, r9.xyzx
    dp3 r5.x, r12.xyzx, r9.xyzx
    add r5.x, r5.x, r5.x
    mov r5.x, -r5.x
    mul r9.xyz, r5.xxxx, r9.xyzx
    add r9.xyz, r12.xyzx, r9.xyzx  // tmpV<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 170
    dp3 r5.x, r8.xyzx, r8.xyzx
    rsq r5.x, r5.x
    mul r8.xyz, r5.xxxx, r8.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 173
    dp3 r5.x, r9.xyzx, r8.xyzx
    max r5.x, r5.x, l(0.000000)
    log r5.x, r5.x
    mul r5.x, r5.x, r7.w
    exp r5.x, r5.x
    mul r5.x, r5.x, r6.w  // SpecFactor<0:NaN:Inf>

#line 176
    mul r5.x, r5.x, r8.w
    mul r7.xyz, r7.xyzx, r15.xyzx
    mov r7.w, l(1.000000)
    mul r7.xyzw, r5.xxxx, r7.xyzw  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 161
    movc r7.xyzw, r9.wwww, r7.xyzw, l(0,0,0,1.000000)  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
    movc r6.xyz, r9.wwww, r6.xyzx, l(0,0,0,0)  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 479
    mov r5.yzw, r5.yyzw  // outAmbient4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r6.xyz, r6.xyzx  // outDiffuse4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r7.xyzw, r7.xyzw  // outSpec4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 487
    add r5.xyz, r5.yzwy, r6.xyzx
    mov r6.xyz, -r5.xyzx
    add r6.xyz, r6.xyzx, r11.xyzx
    mul r6.xyz, r6.xyzx, r11.wwww
    add r5.xyz, r5.xyzx, r6.xyzx
    mov r5.w, l(1.000000)
    add r5.xyzw, r7.xyzw, r5.xyzw  // outColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 461
  else 
    mov r5.xyzw, l(0,0,0,1.000000)  // outColor4<0: 0f,1: 0f,2: 0f,3: 1f>
  endif 

#line 84 "shader3D.fx"
  mov r5.xyzw, r5.xyzw  // tmpColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
  add r3.xyzw, r3.xyzw, r5.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 81
  iadd r4.w, r4.w, l(1)  // i<0:[1,3]>
endloop 

#line 69
if_z r1.x
  mov r3.xyzw, l(0,0,0,0)  // finalColor4<0: 0f,1: 0f,2: 0f,3: 0f>
endif 

#line 92
mov r0.xyzw, r3.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r1.x, r2.w  // i<0:[0,2]>
loop 
  ilt r4.w, r1.x, l(2)
  breakc_z r4.w
  nop 
  imul null, r4.w, r1.x, l(4)
  mov r5.xyz, cb2[r4.w + 0].xyzx  // Light<0,1,2>
  mov r6.xyz, cb2[r4.w + 1].xyzx  // Light<4,5,6>
  mov r7.xyz, cb2[r4.w + 2].xyzx  // Light<8,9,10>
  mov r8.xyz, cb2[r4.w + 3].xyzx  // Light<12,13,14>
  mov r5.w, cb2[r4.w + 0].w  // Light<3>
  mov r4.w, cb2[r4.w + 1].w  // Light<7>
  mov r9.xyz, r2.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r10.xyz, r4.xyzx  // Vec_toCam<0:Inf,1:Inf,2:Inf>
  mov r11.xyz, v5.xyzx  // tangentW<0,1,2>

#line 328 "3D_Function.fx"
  mov r8.xyz, r8.xyzx  // LightVec<0,1,2>
  dp3 r6.w, r8.xyzx, r8.xyzx
  rsq r6.w, r6.w
  mul r8.xyz, r6.wwww, r8.xyzx  // Unit_LightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 342
  nop 

#line 191
  ine r6.w, l(0, 0, 0, 0), cb1[3].x
  if_nz r6.w
    sample_indexable(texture2d)(float,float,float,float) r12.xyz, v4.xyxx, t0.xyzw, s0  // outDiffColor3<0:Inf,1:Inf,2:Inf>
  else 

#line 198
    mov r12.xyz, cb1[1].xyzx  // outDiffColor3<0,1,2>

#line 191
  endif 

#line 201
  ine r6.w, l(0, 0, 0, 0), cb1[3].y
  if_nz r6.w

#line 204
    sample_indexable(texture2d)(float,float,float,float) r13.xyz, v4.xyxx, t1.xyzw, s0
    mov r13.xyz, r13.xyzx  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mul r13.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    add r13.xyz, r13.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mov r6.w, -cb1[1].w
    add r6.w, r6.w, l(1.000000)
    max r6.w, r6.w, l(0.000000)
    min r6.w, r6.w, l(1.000000)
    mov r14.xyz, -r13.xyzx
    add r14.xyz, r14.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
    mul r14.xyz, r6.wwww, r14.xyzx
    add r13.xyz, r13.xyzx, r14.xyzx
    dp3 r6.w, r13.xyzx, r13.xyzx
    rsq r6.w, r6.w
    mul r13.xyz, r6.wwww, r13.xyzx  // outNormalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 201
  else 

#line 212
    mov r13.xyz, l(0,1.000000,0,0)  // outNormalTBN<0: 0f,1: 1f,2: 0f>

#line 201
  endif 

#line 215
  ine r6.w, l(0, 0, 0, 0), cb1[3].z
  if_nz r6.w
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, v4.xyxx, t0.xyzw, s0  // outSpecColor3<0:Inf,1:Inf,2:Inf>
  else 

#line 222
    mov r14.xyz, cb1[2].xyzx  // outSpecColor3<0,1,2>

#line 215
  endif 

#line 342
  mov r12.xyz, r12.xyzx  // diffuseColor3<0:Inf,1:Inf,2:Inf>
  mov r15.xyz, r13.xyzx  // normalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r14.xyz, r14.xyzx  // specularColor3<0:Inf,1:Inf,2:Inf>
  nop 
  mov r11.xyz, r11.xyzx  // TangentW<0,1,2>
  mov r9.xyz, r9.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 295
  dp3 r6.w, r9.xyzx, r9.xyzx
  rsq r6.w, r6.w
  mul r16.xyz, r6.wwww, r9.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r17.xyz, r16.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r7.w, r17.yzxy, r11.xyzx
  mul r18.xyz, r17.yzxy, r7.wwww
  mov r18.xyz, -r18.xyzx
  add r18.xyz, r11.xyzx, r18.xyzx
  dp3 r7.w, r18.xyzx, r18.xyzx
  rsq r7.w, r7.w
  mul r18.xyz, r7.wwww, r18.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r19.xyz, r18.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r20.xyz, r17.zxyz, r19.yzxy
  mul r17.xyz, r17.xyzx, r19.xyzx
  mov r17.xyz, -r17.xyzx
  add r17.xyz, r17.xyzx, r20.xyzx
  dp3 r7.w, r17.xyzx, r17.xyzx
  rsq r7.w, r7.w
  mul r17.xyz, r7.wwww, r17.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 306
  mov r18.w, l(0)  // transformMatrix<3: 0f>
  mov r16.w, l(0)  // transformMatrix<7: 0f>
  mov r17.w, l(0)  // transformMatrix<11: 0f>

#line 312
  mov r13.w, l(1.000000)
  dp4 r18.x, r18.xyzw, r13.xyzw  // outVectorXYZ<0:NaN:Inf>
  dp4 r18.y, r16.xyzw, r13.xyzw  // outVectorXYZ<1:NaN:Inf>
  dp4 r18.z, r17.xyzw, r13.xyzw  // outVectorXYZ<2:NaN:Inf>

#line 343
  mov r18.xyz, r18.xyzx  // deviatedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  nop 
  mov r10.xyz, r10.xyzx  // VecToCamW<0:Inf,1:Inf,2:Inf>
  mov r18.xyz, r18.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 232
  ine r7.w, l(0, 0, 0, 0), cb1[3].w

#line 235
  mov r10.xyz, -r10.xyzx
  dp3 r9.w, r10.xyzx, r18.xyzx
  add r9.w, r9.w, r9.w
  mov r9.w, -r9.w
  mul r13.xyz, r9.wwww, r18.xyzx
  add r10.xyz, r10.xyzx, r13.xyzx
  sample_indexable(texturecube)(float,float,float,float) r10.xyz, r10.xyzx, t2.xyzw, s0  // outEnvMapColor4<0:Inf,1:Inf,2:Inf>
  max r9.w, cb1[2].w, l(0.000000)
  min r10.w, r9.w, l(1.000000)  // outEnvMapColor4<3:[0f,1f]>

#line 232
  movc r10.xyzw, r7.wwww, r10.xyzw, l(0,0,0,0)  // outEnvMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>

#line 344
  mov r10.xyzw, r10.xyzw  // envMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>
  nop 

#line 260
  mul r13.xyz, r6.wwww, r9.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r16.xyz, r13.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r7.w, r16.yzxy, r11.xyzx
  mul r17.xyz, r16.yzxy, r7.wwww
  mov r17.xyz, -r17.xyzx
  add r17.xyz, r11.xyzx, r17.xyzx
  dp3 r7.w, r17.xyzx, r17.xyzx
  rsq r7.w, r7.w
  mul r17.xyz, r7.wwww, r17.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r18.xyz, r17.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r19.xyz, r16.zxyz, r18.yzxy
  mul r16.xyz, r16.xyzx, r18.xyzx
  mov r16.xyz, -r16.xyzx
  add r16.xyz, r16.xyzx, r19.xyzx
  dp3 r7.w, r16.xyzx, r16.xyzx
  rsq r7.w, r7.w
  mul r16.xyz, r7.wwww, r16.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
  mov r18.xyz, r4.xyzx
  mov r18.w, l(1.000000)
  mov r17.w, l(0)
  dp4 r17.x, r18.xyzw, r17.xyzw  // outVectorTBN<0:NaN:Inf>
  mov r13.w, l(0)
  dp4 r17.y, r18.xyzw, r13.xyzw  // outVectorTBN<1:NaN:Inf>
  mov r16.w, l(0)
  dp4 r17.z, r18.xyzw, r16.xyzw  // outVectorTBN<2:NaN:Inf>

#line 345
  mov r17.xyz, r17.xyzx  // Vec_toCamTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  nop 

#line 260
  mul r9.xyz, r6.wwww, r9.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r13.xyz, r9.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r6.w, r13.yzxy, r11.xyzx
  mul r16.xyz, r13.yzxy, r6.wwww
  mov r16.xyz, -r16.xyzx
  add r11.xyz, r11.xyzx, r16.xyzx
  dp3 r6.w, r11.xyzx, r11.xyzx
  rsq r6.w, r6.w
  mul r11.xyz, r6.wwww, r11.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r16.xyz, r11.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r18.xyz, r13.zxyz, r16.yzxy
  mul r13.xyz, r13.xyzx, r16.xyzx
  mov r13.xyz, -r13.xyzx
  add r13.xyz, r13.xyzx, r18.xyzx
  dp3 r6.w, r13.xyzx, r13.xyzx
  rsq r6.w, r6.w
  mul r13.xyz, r6.wwww, r13.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
  mov r8.w, l(1.000000)
  mov r11.w, l(0)
  dp4 r11.x, r8.xyzw, r11.xyzw  // outVectorTBN<0:NaN:Inf>
  mov r9.w, l(0)
  dp4 r11.y, r8.xyzw, r9.xyzw  // outVectorTBN<1:NaN:Inf>
  mov r13.w, l(0)
  dp4 r11.z, r8.xyzw, r13.xyzw  // outVectorTBN<2:NaN:Inf>

#line 346
  mov r11.xyz, r11.xyzx  // lightVecTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r8.xyz, -r11.xyzx
  dp3 r6.w, r8.xyzx, r15.xyzx
  mul r4.w, r4.w, r6.w  // diffuseCosFactor<0:NaN:Inf>

#line 354
  nop 
  mov r4.w, r4.w  // diffuseCosFactor<0:NaN:Inf>
  mov r5.w, r5.w  // lightSpecIntensity<0>
  itof r6.w, cb1[0].w  // matSpecSmoothLevel<0:[-2.14748e+009f,2.14748e+009f]>
  mov r8.xyz, cb1[0].xyzx  // matAmbientColor3<0,1,2>
  mov r5.xyz, r5.xyzx  // lightAmbientColor3<0,1,2>
  mov r12.xyz, r12.xyzx  // matDiffuseColor3<0:Inf,1:Inf,2:Inf>
  mov r6.xyz, r6.xyzx  // lightDiffuseColor3<0,1,2>
  mov r14.xyz, r14.xyzx  // matSpecColor3<0:Inf,1:Inf,2:Inf>
  mov r7.xyz, r7.xyzx  // lightSpecColor3<0,1,2>
  mov r17.xyz, r17.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r11.xyz, r11.xyzx  // UnitLightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r15.xyz, r15.xyzx  // Normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 156
  mul r5.xyz, r5.xyzx, r8.xyzx
  mul r5.xyz, r12.xyzx, r5.xyzx  // outAmbient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 161
  lt r7.w, l(0.000000), r4.w

#line 164
  mul r4.w, r4.w, l(1.000000)
  mul r6.xyz, r6.xyzx, r12.xyzx
  mul r6.xyz, r4.wwww, r6.xyzx  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 167
  dp3 r4.w, r15.xyzx, r15.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r15.xyzx
  dp3 r4.w, r11.xyzx, r8.xyzx
  add r4.w, r4.w, r4.w
  mov r4.w, -r4.w
  mul r8.xyz, r4.wwww, r8.xyzx
  add r8.xyz, r11.xyzx, r8.xyzx  // tmpV<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 170
  dp3 r4.w, r17.xyzx, r17.xyzx
  rsq r4.w, r4.w
  mul r9.xyz, r4.wwww, r17.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 173
  dp3 r4.w, r8.xyzx, r9.xyzx
  max r4.w, r4.w, l(0.000000)
  log r4.w, r4.w
  mul r4.w, r4.w, r6.w
  exp r4.w, r4.w
  mul r4.w, r4.w, r5.w  // SpecFactor<0:NaN:Inf>

#line 176
  mul r4.w, r4.w, l(1.000000)
  mul r8.xyz, r7.xyzx, r14.xyzx
  mov r8.w, l(1.000000)
  mul r8.xyzw, r4.wwww, r8.xyzw  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 161
  movc r8.xyzw, r7.wwww, r8.xyzw, l(0,0,0,1.000000)  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
  movc r6.xyz, r7.wwww, r6.xyzx, l(0,0,0,0)  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 354
  mov r5.xyz, r5.xyzx  // outAmbient4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r6.xyz, r6.xyzx  // outDiffuse4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r8.xyzw, r8.xyzw  // outSpec4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 362
  add r5.xyz, r5.xyzx, r6.xyzx
  mov r6.xyz, -r5.xyzx
  add r6.xyz, r6.xyzx, r10.xyzx
  mul r6.xyz, r6.xyzx, r10.wwww
  add r5.xyz, r5.xyzx, r6.xyzx
  mov r5.w, l(1.000000)
  add r5.xyzw, r8.xyzw, r5.xyzw  // outColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 94 "shader3D.fx"
  mov r5.xyzw, r5.xyzw  // tmpColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
  add r0.xyzw, r0.xyzw, r5.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 92
  iadd r1.x, r1.x, l(1)  // i<0:[1,3]>
endloop 

#line 97
mov r5.xyzw, r0.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
mov r1.x, r2.w  // i<0:[0,2]>
loop 
  ilt r4.w, r1.x, l(2)
  breakc_z r4.w
  nop 
  imul null, r4.w, r1.x, l(4)
  mov r6.xyz, cb2[r4.w + 200].xyzx  // Light<0,1,2>
  mov r7.xyz, cb2[r4.w + 201].xyzx  // Light<4,5,6>
  mov r8.xyz, cb2[r4.w + 202].xyzx  // Light<8,9,10>
  mov r9.xyz, cb2[r4.w + 203].xyzx  // Light<12,13,14>
  mov r6.w, cb2[r4.w + 200].w  // Light<3>
  mov r7.w, cb2[r4.w + 201].w  // Light<7>
  mov r8.w, cb2[r4.w + 202].w  // Light<11>
  mov r4.w, cb2[r4.w + 203].w  // Light<15>
  mov r10.xyz, r2.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r11.xyz, r4.xyzx  // Vec_toCam<0:Inf,1:Inf,2:Inf>
  mov r12.xyz, v2.xyzx  // thisPoint<0,1,2>
  mov r13.xyz, v5.xyzx  // tangentW<0,1,2>

#line 379 "3D_Function.fx"
  mov r9.xyz, -r9.xyzx
  add r9.xyz, r9.xyzx, r12.xyzx  // LightVec<0:Inf,1:Inf,2:Inf>
  dp3 r9.w, r9.xyzx, r9.xyzx
  rsq r10.w, r9.w
  mul r12.xyz, r9.xyzx, r10.wwww  // Unit_LightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r9.xyz, r12.xyzx  // Unit_LightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 383
  sqrt r9.w, r9.w  // disFromLight<0:NaN:Inf>
  mul r8.w, r8.w, r9.w
  mul r8.w, r9.w, r8.w
  add r8.w, r8.w, l(1.000000)
  div r8.w, l(1.000000), r8.w  // Attenuation<0:NaN:Inf>

#line 388
  lt r4.w, r4.w, r9.w

#line 201
  ine r9.w, l(0, 0, 0, 0), cb1[3].y
  if_nz r9.w

#line 204
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, v4.xyxx, t1.xyzw, s0
    mov r14.xyz, r14.xyzx  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mul r14.xyz, r14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    add r14.xyz, r14.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // outNormalTBN<0:Inf,1:Inf,2:Inf>
    mov r9.w, -cb1[1].w
    add r9.w, r9.w, l(1.000000)
    max r9.w, r9.w, l(0.000000)
    min r9.w, r9.w, l(1.000000)
    mov r15.xyz, -r14.xyzx
    add r15.xyz, r15.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
    mul r15.xyz, r9.wwww, r15.xyzx
    add r14.xyz, r14.xyzx, r15.xyzx
    dp3 r9.w, r14.xyzx, r14.xyzx
    rsq r9.w, r9.w
    mul r14.xyz, r9.wwww, r14.xyzx  // outNormalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 201
  else 

#line 212
    mov r14.xyz, l(0,1.000000,0,0)  // outNormalTBN<0: 0f,1: 1f,2: 0f>

#line 201
  endif 

#line 405
  mov r13.xyz, r13.xyzx  // TangentW<0,1,2>
  mov r10.xyz, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 295
  dp3 r9.w, r10.xyzx, r10.xyzx
  rsq r9.w, r9.w
  mul r15.xyz, r9.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r16.xyz, r15.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
  dp3 r10.w, r16.yzxy, r13.xyzx
  mul r17.xyz, r16.yzxy, r10.wwww
  mov r17.xyz, -r17.xyzx
  add r17.xyz, r13.xyzx, r17.xyzx
  dp3 r10.w, r17.xyzx, r17.xyzx
  rsq r10.w, r10.w
  mul r17.xyz, r10.wwww, r17.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r18.xyz, r17.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
  mul r19.xyz, r16.zxyz, r18.yzxy
  mul r16.xyz, r16.xyzx, r18.xyzx
  mov r16.xyz, -r16.xyzx
  add r16.xyz, r16.xyzx, r19.xyzx
  dp3 r10.w, r16.xyzx, r16.xyzx
  rsq r10.w, r10.w
  mul r16.xyz, r10.wwww, r16.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 306
  mov r17.w, l(0)  // transformMatrix<3: 0f>
  mov r15.w, l(0)  // transformMatrix<7: 0f>
  mov r16.w, l(0)  // transformMatrix<11: 0f>

#line 312
  mov r14.w, l(1.000000)
  dp4 r17.x, r17.xyzw, r14.xyzw  // outVectorXYZ<0:NaN:Inf>
  dp4 r17.y, r15.xyzw, r14.xyzw  // outVectorXYZ<1:NaN:Inf>
  dp4 r17.z, r16.xyzw, r14.xyzw  // outVectorXYZ<2:NaN:Inf>

#line 405
  mov r17.xyz, r17.xyzx  // deviatedNormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mov r11.xyz, r11.xyzx  // VecToCamW<0:Inf,1:Inf,2:Inf>
  mov r17.xyz, r17.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 235
  mov r11.xyz, -r11.xyzx
  dp3 r10.w, r11.xyzx, r17.xyzx
  add r10.w, r10.w, r10.w
  mov r10.w, -r10.w
  mul r15.xyz, r10.wwww, r17.xyzx
  add r11.xyz, r11.xyzx, r15.xyzx
  sample_indexable(texturecube)(float,float,float,float) r11.xyz, r11.xyzx, t2.xyzw, s0  // outEnvMapColor4<0:Inf,1:Inf,2:Inf>

#line 396
  if_z r4.w

#line 404
    nop 

#line 191
    ine r4.w, l(0, 0, 0, 0), cb1[3].x
    if_nz r4.w
      sample_indexable(texture2d)(float,float,float,float) r15.xyz, v4.xyxx, t0.xyzw, s0  // outDiffColor3<0:Inf,1:Inf,2:Inf>
    else 

#line 198
      mov r15.xyz, cb1[1].xyzx  // outDiffColor3<0,1,2>

#line 191
    endif 

#line 215
    ine r4.w, l(0, 0, 0, 0), cb1[3].z
    if_nz r4.w
      sample_indexable(texture2d)(float,float,float,float) r16.xyz, v4.xyxx, t0.xyzw, s0  // outSpecColor3<0:Inf,1:Inf,2:Inf>
    else 

#line 222
      mov r16.xyz, cb1[2].xyzx  // outSpecColor3<0,1,2>

#line 215
    endif 

#line 404
    mov r15.xyz, r15.xyzx  // diffuseColor3<0:Inf,1:Inf,2:Inf>
    mov r14.xyz, r14.xyzx  // normalTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r16.xyz, r16.xyzx  // specularColor3<0:Inf,1:Inf,2:Inf>
    nop 
    nop 

#line 232
    ine r4.w, l(0, 0, 0, 0), cb1[3].w

#line 235
    max r10.w, cb1[2].w, l(0.000000)
    min r11.w, r10.w, l(1.000000)  // outEnvMapColor4<3:[0f,1f]>

#line 232
    movc r11.xyzw, r4.wwww, r11.xyzw, l(0,0,0,0)  // outEnvMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>

#line 406
    mov r11.xyzw, r11.xyzw  // envMapColor4<0:Inf,1:Inf,2:Inf,3:[-0f,1f]>
    nop 

#line 260
    mul r17.xyz, r9.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r18.xyz, r17.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
    dp3 r4.w, r18.yzxy, r13.xyzx
    mul r19.xyz, r18.yzxy, r4.wwww
    mov r19.xyz, -r19.xyzx
    add r19.xyz, r13.xyzx, r19.xyzx
    dp3 r4.w, r19.xyzx, r19.xyzx
    rsq r4.w, r4.w
    mul r19.xyz, r4.wwww, r19.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r20.xyz, r19.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
    mul r21.xyz, r18.zxyz, r20.yzxy
    mul r18.xyz, r18.xyzx, r20.xyzx
    mov r18.xyz, -r18.xyzx
    add r18.xyz, r18.xyzx, r21.xyzx
    dp3 r4.w, r18.xyzx, r18.xyzx
    rsq r4.w, r4.w
    mul r18.xyz, r4.wwww, r18.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
    mov r20.xyz, r4.xyzx
    mov r20.w, l(1.000000)
    mov r19.w, l(0)
    dp4 r19.x, r20.xyzw, r19.xyzw  // outVectorTBN<0:NaN:Inf>
    mov r17.w, l(0)
    dp4 r19.y, r20.xyzw, r17.xyzw  // outVectorTBN<1:NaN:Inf>
    mov r18.w, l(0)
    dp4 r19.z, r20.xyzw, r18.xyzw  // outVectorTBN<2:NaN:Inf>

#line 407
    mov r19.xyz, r19.xyzx  // Vec_toCamTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 260
    mul r17.xyz, r9.wwww, r10.xyzx  // NormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r18.xyz, r17.zxyz  // NormalW<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
    dp3 r4.w, r18.yzxy, r13.xyzx
    mul r20.xyz, r18.yzxy, r4.wwww
    mov r20.xyz, -r20.xyzx
    add r13.xyz, r13.xyzx, r20.xyzx
    dp3 r4.w, r13.xyzx, r13.xyzx
    rsq r4.w, r4.w
    mul r13.xyz, r4.wwww, r13.xyzx  // TangentW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r20.xyz, r13.yzxy  // TangentW<1:NaN:Inf,2:NaN:Inf,0:NaN:Inf>
    mul r21.xyz, r18.zxyz, r20.yzxy
    mul r18.xyz, r18.xyzx, r20.xyzx
    mov r18.xyz, -r18.xyzx
    add r18.xyz, r18.xyzx, r21.xyzx
    dp3 r4.w, r18.xyzx, r18.xyzx
    rsq r4.w, r4.w
    mul r18.xyz, r4.wwww, r18.xyzx  // BinormalW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 276
    mov r12.w, l(1.000000)
    mov r13.w, l(0)
    dp4 r13.x, r12.xyzw, r13.xyzw  // outVectorTBN<0:NaN:Inf>
    mov r17.w, l(0)
    dp4 r13.y, r12.xyzw, r17.xyzw  // outVectorTBN<1:NaN:Inf>
    mov r18.w, l(0)
    dp4 r13.z, r12.xyzw, r18.xyzw  // outVectorTBN<2:NaN:Inf>

#line 408
    mov r13.xyz, r13.xyzx  // lightVecTBN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 411
    mov r9.xyz, -r9.xyzx
    dp3 r4.w, r9.xyzx, r10.xyzx
    mul r4.w, r4.w, r7.w  // diffuseCosFactor<0:NaN:Inf>

#line 417
    nop 
    mov r4.w, r4.w  // diffuseCosFactor<0:NaN:Inf>
    mov r6.w, r6.w  // lightSpecIntensity<0>
    itof r7.w, cb1[0].w  // matSpecSmoothLevel<0:[-2.14748e+009f,2.14748e+009f]>
    mov r8.w, r8.w  // Attenuation<0:NaN:Inf>
    mov r9.xyz, cb1[0].xyzx  // matAmbientColor3<0,1,2>
    mov r6.xyz, r6.xyzx  // lightAmbientColor3<0,1,2>
    mov r15.xyz, r15.xyzx  // matDiffuseColor3<0:Inf,1:Inf,2:Inf>
    mov r7.xyz, r7.xyzx  // lightDiffuseColor3<0,1,2>
    mov r16.xyz, r16.xyzx  // matSpecColor3<0:Inf,1:Inf,2:Inf>
    mov r8.xyz, r8.xyzx  // lightSpecColor3<0,1,2>
    mov r19.xyz, r19.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r13.xyz, r13.xyzx  // UnitLightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r14.xyz, r14.xyzx  // Normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 156
    mul r6.xyz, r6.xyzx, r9.xyzx
    mul r6.xyz, r15.xyzx, r6.xyzx  // outAmbient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 161
    lt r9.x, l(0.000000), r4.w

#line 164
    mul r4.w, r4.w, r8.w
    mul r7.xyz, r7.xyzx, r15.xyzx
    mul r7.xyz, r4.wwww, r7.xyzx  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 167
    dp3 r4.w, r14.xyzx, r14.xyzx
    rsq r4.w, r4.w
    mul r9.yzw, r4.wwww, r14.xxyz
    dp3 r4.w, r13.xyzx, r9.yzwy
    add r4.w, r4.w, r4.w
    mov r4.w, -r4.w
    mul r9.yzw, r4.wwww, r9.yyzw
    add r9.yzw, r13.xxyz, r9.yyzw  // tmpV<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 170
    dp3 r4.w, r19.xyzx, r19.xyzx
    rsq r4.w, r4.w
    mul r10.xyz, r4.wwww, r19.xyzx  // Vec_toCam<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 173
    dp3 r4.w, r9.yzwy, r10.xyzx
    max r4.w, r4.w, l(0.000000)
    log r4.w, r4.w
    mul r4.w, r4.w, r7.w
    exp r4.w, r4.w
    mul r4.w, r4.w, r6.w  // SpecFactor<0:NaN:Inf>

#line 176
    mul r4.w, r4.w, r8.w
    mul r8.xyz, r8.xyzx, r16.xyzx
    mov r8.w, l(1.000000)
    mul r8.xyzw, r4.wwww, r8.xyzw  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 161
    movc r8.xyzw, r9.xxxx, r8.xyzw, l(0,0,0,1.000000)  // outSpecular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
    movc r7.xyz, r9.xxxx, r7.xyzx, l(0,0,0,0)  // outDiffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 417
    mov r6.xyz, r6.xyzx  // outAmbient4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r7.xyz, r7.xyzx  // outDiffuse4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r8.xyzw, r8.xyzw  // outSpec4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 425
    add r6.xyz, r6.xyzx, r7.xyzx
    mov r7.xyz, -r6.xyzx
    add r7.xyz, r7.xyzx, r11.xyzx
    mul r7.xyz, r7.xyzx, r11.wwww
    add r6.xyz, r6.xyzx, r7.xyzx
    mov r6.w, l(1.000000)
    add r6.xyzw, r8.xyzw, r6.xyzw  // outColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 396
  else 
    mov r6.xyzw, l(0,0,0,1.000000)  // outColor4<0: 0f,1: 0f,2: 0f,3: 1f>
  endif 

#line 99 "shader3D.fx"
  mov r6.xyzw, r6.xyzw  // tmpColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
  add r5.xyzw, r5.xyzw, r6.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 97
  iadd r1.x, r1.x, l(1)  // i<0:[1,3]>
endloop 

#line 61
if_nz r1.w
  mov o0.xyz, cb3[0].xyzx  // PS_DefaultDraw<0,1,2>
  mov o0.w, l(1.000000)  // PS_DefaultDraw<3: 1f>
  ret 
endif 

#line 90
if_nz r1.z
  mov r3.xyzw, r5.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
endif 

#line 114
ine r0.x, l(0, 0, 0, 0), cb3[0].w
if_nz r0.x
  mov r0.x, -cb3[1].x
  add r0.y, r0.x, r1.y
  add r0.x, r0.x, cb3[1].y
  div r0.x, r0.y, r0.x
  max r0.x, r0.x, l(0.000000)  // fogInterpolationFactor<0:Inf:[-0f,1.#INFf]>
  mov r1.xyzw, -r3.xyzw
  mov r2.xyz, cb3[0].xyzx
  mov r2.w, l(1.000000)
  add r1.xyzw, r1.xyzw, r2.xyzw
  mul r0.xyzw, r0.xxxx, r1.xyzw
  add r3.xyzw, r0.xyzw, r3.xyzw  // finalColor4<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 114
endif 

#line 120
mov o0.xyzw, r3.xyzw  // PS_DefaultDraw<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
ret 
// Approximately 1146 instruction slots used
